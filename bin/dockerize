#!/bin/bash

# Build heka image and run the containers in the background

red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

# Reset all variables that might be set
file=
verbose=0

show_help () {
  echo Build heka image and run the containers in the background
}

while [ "$#" -gt 0 ]; do
    case $1 in
        -h|-\?|--help)   # Call a "show_help" function to display a synopsis, then exit.
            show_help
            exit
            ;;
        -v|--verbose)
            verbose=$((verbose + 1)) # Each -v argument adds 1 to verbosity.
            ;;
        --)              # End of all options.
            shift
            break
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)               # Default case: If no more options then break out of the loop.
            break
    esac

    shift
done

# Rest of the program here.
# If there are input files (for example) that follow the options, they
# will remain in the "$@" positional parameters.

if [ "$verbose" == 1 ]; then
  echo verbose
else
  echo 
fi

docker run -d -p 9200:9200 -p 9300:9300 dockerfile/elasticsearch
echo "${green}Elastic Search is running in the background. port 9200${reset}"

docker run -d -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 -e PRE_CREATE_DB="db1;db2;db3" tutum/influxdb
echo "${green}InfluxDB is running in the background. ports 8083 and 8086${reset}"

docker run -d -p 80:80 -e INFLUXDB_HOST=127.0.0.1 -e INFLUXDB_PORT=8086 -e INFLUXDB_NAME=db1 -e INFLUXDB_USER=root -e INFLUXDB_PASS=root  -e ELASTICSEARCH_HOST=127.0.0.1 -e ELASTICSEARCH_PORT=9200 -e ELASTICSEARCH_USER=**None** -e ELASTICSEARCH_PASS=**None** tutum/grafana
echo "${green}Grafana is running in the background. port 80${reset}"

docker build -t heka .
docker run -d --name heka -v $(pwd)/hekad.toml:/etc/hekad/hekad.toml -p 4352:4352 heka
echo "${green}Heka is running in the background. port 4352${reset}"

